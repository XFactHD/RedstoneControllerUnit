plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.42-beta'
}

version = mod_version
group = 'io.github.xfacthd'

base {
    archivesName = 'RedstoneControllerUnit'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = neo_version

    //validateAccessTransformers = true

    runs {
        configureEach {
            gameDirectory = project.file('run')
            //systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }

        client {
            client()

            systemProperty 'neoforge.enabledGameTestNamespaces', 'rsctrlunit'
        }

        server {
            server()

            gameDirectory = project.file('run_server')
            systemProperty 'neoforge.enabledGameTestNamespaces', 'rsctrlunit'
            programArgument '--nogui'
        }

        gameTestServer {
            type = "gameTestServer"

            gameDirectory = project.file('run_gametest')
            systemProperty 'forge.enabledGameTestNamespaces', 'rsctrlunit'
        }

        data {
            data()

            programArguments.addAll('--mod', 'rsctrlunit', '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath())
        }
    }

    mods {
        rsctrlunit {
            sourceSet(sourceSets.main)
        }
    }

    unitTest {
        enable()

        testedMod = mods.rsctrlunit
    }
}

sourceSets {
    main.resources {
        srcDir 'src/generated/resources'
    }

    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

repositories {
    maven {
        name = 'CurseMaven'
        url = 'https://www.cursemaven.com'
        content {
            includeGroup('curse.maven')
        }
    }
    maven {
        url = "https://commoble.net/maven/"
        content {
            includeGroup('net.commoble.morered')
        }
    }
}

dependencies {
    compileOnly("curse.maven:atlasviewer-633577:${atlasviewer_coord}")
    compileOnly("net.commoble.morered:morered-${morered_mc_version}:${morered_version}")

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            mod_version            : mod_version,
            atlasviewer_version    : atlasviewer_version,
            morered_version        : morered_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
